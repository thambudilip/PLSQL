--WRITE A PL/SQL PROGRAM FOR DISPALY EMPNO,ENAME,JOB,SAL,DEPTNO,DNAME,LOC USING EMPLOYEE AND DEPARTMENT TABLES
-- APPLY THE CONCEPTS (IF CONDTIONS AND MERGE)
-- USING IF ELSE CONDTION
DECLARE
    v_empno  EMP.EMPNO%TYPE;
    v_empname EMP.ENAME%TYPE;
    v_job EMP.JOB%TYPE;
    v_sal EMP.SAL%TYPE;
    v_deptno EMP.DEPTNO%TYPE;
    v_dname DEPT.DNAME%TYPE;
    v_loc DEPT.LOC%TYPE;
BEGIN
    SELECT E1.EMPNO,E1.ENAME,E1.JOB,E1.SAL,E1.DEPTNO,D1.DNAME,D1.LOC
    INTO v_empno,v_empname,v_job,v_sal,v_deptno,v_dname,v_loc
    FROM EMP E1 
    INNER JOIN DEPT D1
    ON E1.DEPTNO = D1.DEPTNO
    WHERE E1.EMPNO = 7900;
	IF v_sal>1000 AND v_sal<=2500
        THEN DBMS_OUTPUT.PUT_LINE('Medium sal');
        ELSIF v_sal>2500 AND v_sal<=4000
            THEN DBMS_OUTPUT.PUT_LINE('Good sal');
    	ELSIF v_sal>4000 
            THEN DBMS_OUTPUT.PUT_LINE('High sal');
    	ELSE
            DBMS_OUTPUT.PUT_LINE('Low sal');      
    END IF;
	DBMS_OUTPUT.PUT_LINE('Employee Number: ' || v_empno);
    DBMS_OUTPUT.PUT_LINE('Employee Name: ' || v_empname);
    DBMS_OUTPUT.PUT_LINE('Job: ' || v_job);
    DBMS_OUTPUT.PUT_LINE('Salary: ' || v_sal);
    DBMS_OUTPUT.PUT_LINE('Department Number: ' || v_deptno);
    DBMS_OUTPUT.PUT_LINE('Department Name: ' || v_dname);
    DBMS_OUTPUT.PUT_LINE('Location: ' || v_loc);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No data found');
	WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An Error Occured'||SQLERRM);
END;
----------------------------------------------------------------------------------------------------------------------------

--WRITE A PL/SQL PROGRAM FOR DISPALY EMPNO,ENAME,JOB,SAL,DEPTNO,DNAME,LOC USING EMPLOYEE AND DEPARTMENT TABLES
-- APPLY THE CONCEPTS (IF CONDTIONS AND MERGE)
-- USING CASE
DECLARE
    v_empno  EMP.EMPNO%TYPE;
    v_empname EMP.ENAME%TYPE;
    v_job EMP.JOB%TYPE;
    v_sal EMP.SAL%TYPE;
    v_deptno EMP.DEPTNO%TYPE;
    v_dname DEPT.DNAME%TYPE;
    v_loc DEPT.LOC%TYPE;
BEGIN
    SELECT E1.EMPNO,E1.ENAME,E1.JOB,E1.SAL,E1.DEPTNO,D1.DNAME,D1.LOC
    INTO v_empno,v_empname,v_job,v_sal,v_deptno,v_dname,v_loc
    FROM EMP E1 
    INNER JOIN DEPT D1
    ON E1.DEPTNO = D1.DEPTNO
    WHERE E1.EMPNO = 7900;
	CASE WHEN v_sal>1000 AND v_sal<2500
        	THEN DBMS_OUTPUT.PUT_LINE('AVERAGE SALARY');
	WHEN v_sal>=2500 AND v_sal<4000
        	THEN DBMS_OUTPUT.PUT_LINE('MEDIUM SALARY');
	WHEN v_sal>=4000 
        	THEN DBMS_OUTPUT.PUT_LINE('HIGH SALARY');
	ELSE
     	DBMS_OUTPUT.PUT_LINE('BELOW AVEAGE SALARY');
	END CASE;
	DBMS_OUTPUT.PUT_LINE('Employee Number: ' || v_empno);
    DBMS_OUTPUT.PUT_LINE('Employee Name: ' || v_empname);
    DBMS_OUTPUT.PUT_LINE('Job: ' || v_job);
    DBMS_OUTPUT.PUT_LINE('Salary: ' || v_sal);
    DBMS_OUTPUT.PUT_LINE('Department Number: ' || v_deptno);
    DBMS_OUTPUT.PUT_LINE('Department Name: ' || v_dname);
    DBMS_OUTPUT.PUT_LINE('Location: ' || v_loc);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No data found');
	WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An Error Occured'||SQLERRM);
END;

-----------------------------------------------------------------------------------------------

SELECT * FROM HR.EMPLOYEES;
SELECT * FROM HR.DEPARTMENTS;
SELECT * FROM HR.LOCATIONS;	


----------------------------------------------------------------------------------------------

DROP TABLE EMP1;
CREATE TABLE EMP1 AS SELECT * FROM EMP;

BEGIN
    INSERT INTO EMP1(EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO)
    		VALUES(7500,'DILIPKUMAR','MANAGER',7900,'25-FEB-2023',10000,5000,20);
END;

SELECT * FROM EMP1;
DECLARE
BEGIN
    MERGE INTO EMP E 
    USING EMP1 E1
    ON (E.EMPNO = E1.EMPNO)
    WHEN MATCHED THEN
    UPDATE SET  
    		    E.ENAME = E1.ENAME,
    		    E.JOB   = E1.JOB,
            	E.MGR = E1.MGR,
                E.SAL = E1.SAL,
            	E.COMM = E1.COMM,
                E.DEPTNO = E1.DEPTNO;
	WHEN NOT MATCHED THEN
        INSERT (EMPNO ,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) 
        VALUES (E1.EMPNO,E1.ENAME,E1.JOB,E1.MGR,E1.HIREDATE,E1.SAL,E1.COMM,E1.DEPTNO);
END;

SET SERVEROUTPUT ON

DECLARE
BEGIN
    MERGE INTO EMP E 
    USING EMP1 E1
    ON (E.EMPNO = E1.EMPNO)
    WHEN MATCHED THEN
        UPDATE SET  
            E.ENAME = E1.ENAME,
            E.JOB   = E1.JOB,
            E.MGR = E1.MGR,
            E.SAL = E1.SAL,
            E.COMM = E1.COMM,
            E.DEPTNO = E1.DEPTNO;
    WHEN NOT MATCHED THEN
        INSERT (EMPNO ,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) 
        VALUES (E1.EMPNO,E1.ENAME,E1.JOB,E1.MGR,E1.HIREDATE,E1.SAL,E1.COMM,E1.DEPTNO);
    COMMIT; -- Commit the changes
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;

SELECT * FROM EMP;

------------------------------------------------------------------------------------------------------------------------

DROP TABLE EMPLOYEEID;

CREATE TABLE EMPLOYEEID(
    ID INT,
    FIRST_NAME VARCHAR2(50),
    LAST_NAME VARCHAR2(50),
	DEPT VARCHAR2(50),
    SAL NUMBER(5,2)
);


INSERT INTO EMPLOYEEID (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (11,'DILIPKUMAR','PITCHAIMUTHU','IT',800);
INSERT INTO EMPLOYEEID (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (12,'SEENIVASAN','SELVAMANI','MSW',700);
INSERT INTO EMPLOYEEID (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (13,'HARIKRISHNAN','HARIDASS','COMMERCE',600);
INSERT INTO EMPLOYEEID (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (14,'KESAV','VENUGOPAL','SOCIAL DEVELOPMENT',800);

DROP TABLE EMPLOYEEID_S;

CREATE TABLE EMPLOYEEID_S AS SELECT * FROM EMPLOYEEID;


INSERT INTO EMPLOYEEID_S (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (14,'KESAVAN','VENUGOPALAN','SOCIAL DEVELOPMENT',850);

INSERT INTO EMPLOYEEID_S (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (13,'HARIKRISHNA','HARIDASS KERALA','SOCIAL WORKER',750);

INSERT INTO EMPLOYEEID_S (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (18,'AMUTHA','KRISHNASAMY','AGRICULTURE AND FERTILIZER',750);


SELECT * FROM EMPLOYEEID;

SELECT * FROM EMPLOYEEID_S;

DELETE FROM EMPLOYEEID_S; -- IT IS FOR DELETING ALL RECORDS IN  A TABLE

MERGE INTO EMPLOYEEID E
USING   EMPLOYEEID_S E1
ON (E.ID = E1.ID)
WHEN MATCHED THEN
UPDATE SET 
    	E.FIRST_NAME=E1.FIRST_NAME,
    	E.LAST_NAME = E1.LAST_NAME,
    	E.DEPT = E1.DEPT,
    	E.SAL = E1.SAL    
WHEN NOT MATCHED THEN 
		INSERT (ID,FIRST_NAME,LAST_NAME,DEPT,SAL) VALUES (E1.ID,E1.FIRST_NAME,E1.LAST_NAME,E1.DEPT,E1.SAL)

SELECT * FROM EMPLOYEEID



